# {{ ansible_managed }}
# Consul Template Managed - Consul

# Not setting node name, consul will figure it out on it's own
#node_name = "n/a"

datacenter         = "hl-us-homelab1"
primary_datacenter = "hl-us-homelab1"

data_dir = "/opt/consul/data"
{% raw %}
{{ with secret "secret/consul/encrypt_key" }}
encrypt = "{{ .Data.key }}"
{{ end }}
{% endraw %}

retry_join = [
  "hashi-consul-1.us-homelab1.hl.rmb938.me",
  "hashi-consul-2.us-homelab1.hl.rmb938.me",
  "hashi-consul-3.us-homelab1.hl.rmb938.me"
]

bind_addr = "{% raw %}{{ `{{ GetInterfaceIP \"eth0\" }}` }}{% endraw %}"
serf_lan  = "{% raw %}{{ `{{ GetInterfaceIP \"eth0\" }}` }}{% endraw %}"

# Hard coding this, no easy way to figure this out at deploy time
serf_lan_allowed_cidrs = ["192.168.23.0/24"]

advertise_addr = "{% raw %}{{ `{{ GetInterfaceIP \"eth0\" }}` }}{% endraw %}"

addresses {
  http     = "127.0.0.1"
  grpc     = "127.0.0.1"
  grpc_tls = "{% raw %}{{ `{{ GetInterfaceIP \"eth0\" }}` }}{% endraw %}"
}

ports {
  http     = 8500
  https    = -1
  serf_wan = -1
  grpc     = 8502
  grpc_tls = 8503
}

tls {
  grpc {
    ca_file = "/opt/consul/tls/connect_ca.crt"

    verify_incoming = true

    # grpc certs will come from connect CA
    use_auto_cert = true
  }
}

auto_encrypt {
  // allow_tls = true # server only
  tls = true
}

acl {
  enabled                  = true
  down_policy              = "extend-cache"
  default_policy           = "deny"
  enable_key_list_policy   = true
  enable_token_persistence = true

  tokens {
    {% raw %}
    // sudo systemctl set-environment CONSUL_ROLE=$ROLE
    // echo -e "[Manager]\nDefaultEnvironment=CONSUL_ROLE=$ROLE" | sudo tee /etc/systemd/system.conf.d/consul_role.conf
    // sudo systemctl enable consul-template-consul.service
    // sudo systemctl start consul-template-consul.service
    {{ with printf "consul/creds/%s" (mustEnv "CONSUL_ROLE") | secret }}
    default = "{{ .Data.token }}"
    agent   = "{{ .Data.token }}"
    dns     = "{{ .Data.token }}"

    config_file_service_registration = "{{ .Data.token }}"
    {{ end }}
    {% endraw %}
  }
}

node_meta {
  # Must match CONSUL_ROLE env var
  consul_role = "{% raw %}{{ mustEnv "CONSUL_ROLE" }}{% endraw %}"
}