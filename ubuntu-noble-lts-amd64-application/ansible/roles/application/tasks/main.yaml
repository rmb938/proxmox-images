---
- name: Create Cloud Environment
  ansible.builtin.copy:
    dest: /etc/cloud-environment
    content: ""
    mode: "0744"
    owner: root
    group: root

# Start Cloud Init Scripts
- name: Cloud Init Per Boot Scripts
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "/var/lib/cloud/scripts/per-boot/{{ item | basename }}"
    mode: "0755"
    owner: root
    group: root
  with_fileglob:
    - ../files/var/lib/cloud/scripts/per-boot/*.sh

- name: Custom Scripts Cloud Init Dir
  ansible.builtin.file:
    path: /var/lib/cloud/scripts/custom
    mode: "0755"
    owner: root
    group: root
    state: directory

- name: Cloud Init Custom Scripts
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "/var/lib/cloud/scripts/custom/{{ item | basename }}"
    mode: "0755"
    owner: root
    group: root
  with_fileglob:
    - ../files/var/lib/cloud/scripts/custom/*.sh

- name: Custom Per Boot Scripts Cloud Init Dir
  ansible.builtin.file:
    path: /var/lib/cloud/scripts/custom-per-boot
    mode: "0755"
    owner: root
    group: root
    state: directory
# End Cloud Init Scripts

- name: Create SystemD system override folder
  ansible.builtin.file:
    path: /etc/systemd/system.conf.d
    state: directory
    mode: "0755"
    owner: root
    group: root

# Start Hashicorp
- name: Install Hashicorp keyring
  ansible.builtin.get_url:
    url: https://apt.releases.hashicorp.com/gpg
    dest: /usr/share/keyrings/hashicorp-archive-keyring.asc
    checksum: sha256:cafb01beac341bf2a9ba89793e6dd2468110291adfbb6c62ed11a0cde6c09029
    mode: "0644"

- name: Add Hashicorp repo
  ansible.builtin.apt_repository:
    repo: >
      deb [arch=amd64 signed-by=/usr/share/keyrings/hashicorp-archive-keyring.asc]
      https://apt.releases.hashicorp.com {{ ansible_distribution_release }} main
    state: present

- name: Install Hashicorp Vault & Consul
  ansible.builtin.package:
    name:
      - vault
      - consul
      - consul-template
    state: present
# End Hashicorp

# Start Consul
- name: Disable Consul
  ansible.builtin.systemd:
    name: consul
    # Make sure consul service is disabled, only consul-template-consul should start it
    enabled: false

- name: Empty existing consul config
  ansible.builtin.copy:
    content: "# $Ansible Managed$"
    dest: "/etc/consul.d/consul.hcl"
    mode: "0644"
    owner: consul
    group: consul

- name: Make consul tls dir
  ansible.builtin.file:
    path: /opt/consul/tls
    state: directory
    mode: "0770"
    owner: consul
    group: consul

- name: Consul Config
  ansible.builtin.template:
    src: "{{ item }}"
    dest: "/etc/consul.d/{{ item | basename }}"
    mode: "0644"
    owner: consul
    group: consul
  with_fileglob:
    - ../templates/etc/consul.d/*.hcl

- name: SystemD Resolver override folder
  ansible.builtin.file:
    path: /etc/systemd/resolved.conf.d/
    state: directory
    mode: "0755"
    owner: root
    group: root

- name: Consul SystemD Resolver
  ansible.builtin.template:
    src: "etc/systemd/resolved.conf.d/consul.conf"
    dest: "/etc/systemd/resolved.conf.d/consul.conf"
    mode: "0644"
    owner: consul
    group: consul
# End Consul

# Start Vault Agent
- name: Vault Step Certs SystemD
  ansible.builtin.template:
    src: etc/systemd/system/vault-step-certs.service
    dest: /etc/systemd/system/vault-step-certs.service
    mode: "0644"

- name: Remove self-signed Value certificates
  ansible.builtin.file:
    path: /opt/vault/tls/{{ item }}
    state: absent
  with_items:
    - tls.crt
    - tls.key

- name: Cron to renew vault certificates
  ansible.builtin.cron:
    name: "renew vault certificates"
    special_time: "hourly"
    # Rekey needs to happen against the CA, RA's don't support rekey
    # https://smallstep.com/docs/step-ca/registration-authority-ra-mode/#stepcas-limitations
    job: >-
      step ca rekey /opt/vault/tls/vault.crt
      /opt/vault/tls/vault.key
      --ca-url {{ step_ca_url }}
      --root /usr/local/share/ca-certificates/smallstep-homelab-prod.crt
      --force --expires-in 720h --exec "systemctl try-reload-or-restart vault"
    state: present

- name: Configure Vault Agent
  ansible.builtin.template:
    src: etc/vault.d/vault.hcl
    dest: /etc/vault.d/vault.hcl
    mode: "0644"

- name: Set Vault Agent ENV
  ansible.builtin.template:
    src: etc/vault.d/vault.env
    dest: /etc/vault.d/vault.env
    mode: "0644"

- name: Create Vault Agent systemd override folder
  ansible.builtin.file:
    path: /etc/systemd/system/vault.service.d/
    state: directory
    mode: "0755"

- name: Vault Agent systemd Override
  ansible.builtin.template:
    src: etc/systemd/system/vault.service.d/override.conf
    dest: /etc/systemd/system/vault.service.d/override.conf
    mode: "0644"

- name: Reload Vault Agent systemd
  ansible.builtin.systemd:
    daemon_reload: true

- name: Start and enable Vault
  ansible.builtin.systemd:
    name: vault
    # Make sure vault agent is not started, consul-template-consul will start it with Wants
    enabled: false
# End Vault Agent

# Start Consul Template for Consul
- name: Add Consul to sudoers
  community.general.sudoers:
    name: consul
    user: consul
    nopassword: true
    validation: required
    commands:
      - /usr/bin/systemctl reload-or-restart consul
    state: present

- name: Create Consul Template Dir
  ansible.builtin.file:
    path: /etc/consul-template
    mode: "0755"
    owner: root
    group: root
    state: directory

- name: Create Consul Template for Consul directory
  ansible.builtin.file:
    path: /etc/consul-template/consul/
    state: directory
    mode: "0744"
    owner: consul
    group: consul

- name: Create Consul Template Templates Dir
  ansible.builtin.file:
    path: /etc/consul-template/templates/
    mode: "0755"
    owner: root
    group: root
    state: directory

- name: Configure Consul Template for Consul
  ansible.builtin.template:
    src: etc/consul-template/consul/00_consul.hcl
    dest: /etc/consul-template/consul/00_consul.hcl
    mode: "0644"
    owner: consul
    group: consul

- name: Create Consul Template for Consul Templates directory
  ansible.builtin.file:
    path: /etc/consul-template/templates/consul/
    state: directory
    mode: "0744"
    owner: consul
    group: consul

- name: Place Consul Template for Consul Templates Files
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "/etc/consul-template/templates/consul/{{ item | basename }}"
    mode: "0644"
    owner: consul
    group: consul
  with_fileglob:
    - ../files/etc/consul-template/templates/consul/*.ctmpl

- name: Place Consul Template for Consul Templates Templates
  ansible.builtin.template:
    src: "{{ item }}"
    dest: "/etc/consul-template/templates/consul/{{ item | basename }}"
    mode: "0644"
    owner: consul
    group: consul
  with_fileglob:
    - ../templates/etc/consul-template/templates/consul/*.ctmpl

- name: Consul Template for Consul SystemD
  ansible.builtin.template:
    src: etc/systemd/system/consul-template-consul.service
    dest: /etc/systemd/system/consul-template-consul.service
    mode: "0644"

- name: Consul Template for Consul systemd
  ansible.builtin.systemd:
    daemon_reload: true

- name: Disable Consul Template for Consul
  ansible.builtin.systemd:
    name: consul-template-consul
    # consul-template-consul is disabled, cloud-init will enable and start it
    enabled: false
# End Consul Template for Consul
